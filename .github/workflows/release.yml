name: Release

# This workflow publishes a new package version. It downloads the prebuilt
# dist/ artifact from the CI workflow for the same commit and then runs
# release-it to bump version, tag, create a GitHub Release, and publish to npm
# (with provenance). This follows the "build once, promote later" practice.

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: >-
      ${{ github.event.workflow_run.conclusion == 'success' &&
          github.event.workflow_run.head_branch == 'main' }}
    permissions:
      contents: write # For git operations
      id-token: write # < REQUIRED FOR OIDC
      actions: read   # Needed to list workflow runs and download artifacts from CI
    steps:
      # Full history is required by release-it to generate correct tags/notes.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed for tags and history
          ref: ${{ github.event.workflow_run.head_sha }}

      # Ensure pnpm is available for scripts.
      - uses: pnpm/action-setup@v4

      # Configure Node and npm registry for publish.
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: https://registry.npmjs.org/

      # Install dev tooling (release-it) without modifying lockfile.
      - run: pnpm install --frozen-lockfile

      # Restores the built dist/ from the CI run of the same commit.
      - name: Download dist artifact from CI for this commit
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.event.workflow_run.id }}
          name: dist
          path: .

      # release-it performs version bump, tags, GitHub Release, and npm publish
      # using the prebuilt dist/ without rebuilding, and enables npm provenance.
      - name: Release with release-it
        run: pnpm run release:ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
